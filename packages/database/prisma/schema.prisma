// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://teamd:teamd50@database.cs.wpi.edu:5432/teamddb?schema=teamdschema"
}

// example table used in the express router example
model HighScore {
  id    Int      @id @default(autoincrement())
  time  DateTime
  score Int
}

//Node Table
model Node {
  nodeId    String @id
  xcoord    Int
  ycoord    Int
  floor     String
  building  String
  nodeType  String
  longName  String
  shortName String
  Edge      Edge[]
  ServiceRequest FlowerServiceRequest[]
}

//Edge Table
model Edge {
  edgeID    String  @id
  node      Node    @relation(fields: [startNodeID], references: [nodeId])
  startNodeID String
  endNodeID   String
}

//User Table
model User {
  Username String    @id
  employee Employee?
}

//Employee Table
model Employee {
  user      User   @relation(fields: [username], references: [Username])
  username  String @id
  firstName String
  lastName  String
  email     String
  serviceRequests ServiceRequest[]
}

// Service Request Table
model ServiceRequest {
  id Int      @id @default(uuid())
  node             Node     @relation(fields: [nodeId], references: [nodeId])
  employee         Employee @relation(fields: [employeeUser], references: [username])
  nodeId           String
  priority         String
  status           String   @default("UnAssigned")
  employeeUser     String
  flowerServiceRequests FlowerServiceRequest[]
  maintenanceServiceRequest maintenanceServiceRequest[]
  externalTransportationServiceRequest externalTransportationServiceRequest[]
  internalTransportServiceRequest internalTransportServiceRequest[]
  languageInterpreterServiceRequest languageInterpreterServiceRequest[]
  religiousServiceRequest religiousServiceRequest[]

}

//Service Request Table
model FlowerServiceRequest{
  ServiceRequest ServiceRequest @relation(fields: [id], references: [id])
  id int @id
  senderName String
  senderEmail String
  patientName String
  flowerType String
  deliveryDate String
  note String
}

model maintenanceServiceRequest {
  ServiceRequest ServiceRequest @relation(fields: [id], references: [id])
  id int @id
  requestType: String
  comment: String
}

model externalTransportationServiceRequest {
  ServiceRequest ServiceRequest @relation(fields: [id], references: [id])
  id int @id
  name: String
  destination: String
  transportation: String
  date: String
  description: String
}

model internalTransportServiceRequest {
  ServiceRequest ServiceRequest @relation(fields: [id], references: [id])
  node Node @relation(fields: [destination], references: [nodeId])
  id int @id
  name: String
  mode: String
  destination: String

}

model languageInterpreterServiceRequest{
  ServiceRequest ServiceRequest @relation(fields: [id], references: [id])
  id int @id
  name: String
  languagePref: String
}

model religiousServiceRequest{
  ServiceRequest ServiceRequest @relation(fields: [id], references: [id])
  id int @id
  name: String
  religion: String
  type: String
  note: String
}

